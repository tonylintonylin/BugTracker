@page
@model RegisterModel

<div class="row align-items-center py-5">
    <div class="col-lg-5 px-lg-4">
        <h6>
            <a class="nav-link text-dark my-3" asp-area="Identity" asp-page="./Login"><< Back to Login</a>
        </h6>
        <h1 class="text-base text-primary text-uppercase mb-4">Bug Tracker</h1>
        <h2 class="mb-4">Register</h2>
        <form method="post">
            <div class="m-1 text-danger" asp-validation-summary="All"></div>
            <div class="form-group">
                <label>UserName</label>
                <input name="UserName" class="form-control" value="@Model.UserName" />
            </div>
            <div class="form-group">
                <label>Email</label>
                <input name="Email" class="form-control" value="@Model.Email" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <input name="Password" class="form-control" value="@Model.Password" />
            </div>
            <button class="btn btn-primary" type="submit">Register</button>
        </form>
    </div>
    <div class="col-5 col-lg-7 mx-auto mb-5 mb-lg-0">
        <div class="pr-lg-5"><img src="/Bootstrap/img/illustration.svg" alt="" class="img-fluid"></div>
    </div>
</div>

@functions {
    [AllowAnonymous]
    public class RegisterModel : PageModel
    {
        public UserManager<IdentityUser> UserManager;

        public RegisterModel(UserManager<IdentityUser> usrManager)
        {
            UserManager = usrManager;
        }

        [BindProperty]
        [Required]
        public string UserName { get; set; }

        [BindProperty]
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [BindProperty]
        [Required]
        public string Password { get; set; }

        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                IdentityUser user =
                new IdentityUser { UserName = UserName, Email = Email };
                IdentityResult result =
                await UserManager.CreateAsync(user, Password);
                if (result.Succeeded)
                {
                    return RedirectToPage("Login");
                }
                foreach (IdentityError err in result.Errors)
                {
                    ModelState.AddModelError("", err.Description);
                }
            }
            return Page();
        }
    }
}
